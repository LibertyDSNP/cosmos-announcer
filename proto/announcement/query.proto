syntax = "proto3";
package Liberty30.usappchain.announcement;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "announcement/broadcast.proto";
import "announcement/sent_announcement.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/Liberty30/us-app-chain/x/announcement/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a broadcast by id.
	rpc Broadcast(QueryGetBroadcastRequest) returns (QueryGetBroadcastResponse) {
		option (google.api.http).get = "/Liberty30/usappchain/announcement/broadcast/{id}";
	}

	// Queries a list of broadcast items.
	rpc BroadcastAll(QueryAllBroadcastRequest) returns (QueryAllBroadcastResponse) {
		option (google.api.http).get = "/Liberty30/usappchain/announcement/broadcast";
	}

// Queries a sentAnnouncement by id.
	rpc SentAnnouncement(QueryGetSentAnnouncementRequest) returns (QueryGetSentAnnouncementResponse) {
		option (google.api.http).get = "/Liberty30/usappchain/announcement/sentAnnouncement/{id}";
	}

	// Queries a list of sentAnnouncement items.
	rpc SentAnnouncementAll(QueryAllSentAnnouncementRequest) returns (QueryAllSentAnnouncementResponse) {
		option (google.api.http).get = "/Liberty30/usappchain/announcement/sentAnnouncement";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetBroadcastRequest {
	uint64 id = 1;
}

message QueryGetBroadcastResponse {
	Broadcast Broadcast = 1 [(gogoproto.nullable) = false];
}

message QueryAllBroadcastRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBroadcastResponse {
	repeated Broadcast Broadcast = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSentAnnouncementRequest {
	uint64 id = 1;
}

message QueryGetSentAnnouncementResponse {
	SentAnnouncement SentAnnouncement = 1 [(gogoproto.nullable) = false];
}

message QueryAllSentAnnouncementRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSentAnnouncementResponse {
	repeated SentAnnouncement SentAnnouncement = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
